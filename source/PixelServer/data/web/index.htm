<!doctype html>

<html>
    <head>
        <title>PIXEL</title>
        <meta charset="utf8">

        <meta name="viewport" content="width=device-width, user-scalable=no">
        <meta name="apple-mobile-web-app-capable" content="yes">

        <link rel="apple-touch-icon" href="icon.png">
        <link rel="apple-touch-icon" href="icon2x.png" sizes="120x120">

        <script src="jquery.js"></script>
        <script src="ui.js"></script>
        <script src="iris.js"></script>

        <style>
            html, body {
                font-family: -apple-system, BlinkMacSystemFont, sans-serif;
                background: #111;
                margin: 0;
                padding: 0;
            }

            svg {
                margin-left:-0.6vw;
                margin-top:-0.4vw;
            }


            #color {
                height: 20vw;
                background-color: #fff;
                color: #fff;

                position: relative;
                transition: background-color 300ms ease;
            }

            #color svg {
                -webkit-filter: invert(100%) grayscale(100%) contrast(150%);
                
                color: inherit;
                stroke: currentColor;
                fill: currentColor;
                opacity: 0.6;

                position: absolute;
                right: 8vw;
                top: 8vw;
                height: 4vw;
                width: 4vw;
                transition: transform 300ms ease;
            }

            .picker #color svg {
                transform: rotate(180deg);
            }
            .picker #color {
                /*border-bottom: 5vw solid #444;*/
            }

            #container {
                border-bottom: 5vw solid #111;
                width: 100vw;
                height: 121vw;
                overflow: hidden;

                margin-top: -92vw;
                position: relative;
                z-index: 1000;
                transition: transform 300ms ease;
            }

            #editor td {
                border: .5vw solid #444;
                margin: 0;
                padding: 0;
            }
            #editor {
                border-collapse: collapse;

                width: 101vw;
                height: 101vw;

                margin-left: -0.5vw;

            }
            .picker #container {
                transform: translateY(92vw);
            }

            #picker {
                border: 5vw solid #444;
                background: #444;
                height: 92vw;
                box-sizing: border-box;
            }

            .iris-picker {
                /*margin-top: 6vw;*/
                opacity: 0;
                transition: opacity 300ms ease;
            }
            .iris-picker * {
                box-shadow: none !important;
            }
            .picker .iris-picker {
                opacity: 1;
            }

            #mode {
                background: #111;
                display: flex;
                justify-content: space-around;
                padding: 5vw 25vw 5vw;
            }

            #mode button {
                background: #333;
                border: none;
                border-radius: 5vw;
                height: 10vw;
                width: 10vw;
                border: .5vw solid #333;
                transition: border-color 300ms ease;

            }
            .pencil button#pencil {
                border: .5vw solid #888;
            }
            .pipet button#pipet {
                border: .5vw solid #888;
            }

            #mode button svg {
                width: 5vw;
                height: 5vw;
            }

            #mode button svg path {
                stroke: #888;
                fill: #888;
            }

            #buttons {
                position: fixed;
                z-index: 2000;
                bottom: 0;
                width: 100%;

                display: flex;
                justify-content: space-around;
                padding: 2.5vw 0;
                background: #222;

            }

            #buttons button {
                background: none;
                border: none;
                font-size: 2.5vw;
                line-height: 6vw;
                color: #888;
                height: 15vw;
                text-transform: uppercase;
                vertical-align: top;
                letter-spacing: 0.15em;
                flex: 1;
                transition: color 300ms ease;
            }
            .form #buttons button {
                color: #444;
            }

            button svg {
                width: 7vw;
                height: 7vw;
                vertical-align: middle;
            }

            button svg path {
                stroke: #aaa;
                fill: #aaa;
                transition: stroke 300ms ease, fill 300ms ease;
            }
            .form button svg path {
                stroke: #444;
                fill: #444;
            }

            #form {
                position: fixed;
                z-index: 1999;
                border-radius: 1vw;
                bottom: 24vw;
                left: 4vw;
                right: 4vw;

                display: flex;
                justify-content: space-around;

                background: #888;
                transform: translateY(24vw);
                opacity: 0;
                transition: transform 300ms ease, opacity 300ms ease;

            }
            #form::after {
                position: absolute;
                content: '';
                right: 6vw;
                bottom: -5vw;
                border: 3vw solid rgba(0,0,0,0);
                border-top-color: #888;
            }
            #form > * {
                /*flex: 1;*/
            }
            .form #form {
                transform: translateY(0);
                opacity: 1;
            }

            #form input {
                background: none;
                border: none;
                height: 11vw;
                margin-top: 2vw;
                margin-bottom: 2vw;
                vertical-align: top;

                font-size: 6vw;
                line-height: 6vw;
                color: #fff;
                text-transform: uppercase;
            }

            #form button {
                background: none;
                border: none;
                height: 15vw;
                text-transform: uppercase;
                vertical-align: top;
            }
            #form button svg {
                height: 6vw;
                width: 6vw;
            }
            #form button svg path {
                stroke: #111;
                fill: #111;
            }

            :focus {
                outline: none;
            }

        </style>
    </head>

    <body class="pencil">
        <div id="color">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                <path d="M 4.84375 12.90625 L 2.75 15 L 25 37.25 L 47.25 15 L 45.15625 12.90625 L 25 33.0625 L 4.84375 12.90625 z"/>
            </svg>
        </div>

        <div id="picker">
        </div>

        <div id="container">
            <div id="mode">
                <button id="pencil">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" enable-background="new 0 0 50 50">
                        <path d="M 42.90625 2.90625 C 41.850906 2.90625 40.796419 3.2973314 40 4.09375 L 39.15625 4.90625 A 1.0001 1.0001 0 0 0 38.5 4.8125 A 1.0001 1.0001 0 0 0 38 5.09375 L 6.59375 36.5 A 1.0001 1.0001 0 0 0 6.375 36.84375 L 3.0625 45.65625 A 1.0001 1.0001 0 0 0 4.34375 46.9375 L 13.15625 43.625 A 1.0001 1.0001 0 0 0 13.5 43.40625 L 44.90625 12 A 1.0001 1.0001 0 0 0 45 10.71875 L 45.8125 9.90625 C 47.405337 8.3134129 47.405337 5.6865871 45.8125 4.09375 C 45.016081 3.2973314 43.961594 2.90625 42.90625 2.90625 z M 42.90625 4.90625 C 43.454459 4.90625 44.002668 5.0964186 44.40625 5.5 C 45.213413 6.3071629 45.213413 7.6928371 44.40625 8.5 L 43.625 9.3125 L 40.625 6.3125 L 41.40625 5.5 C 41.809832 5.0964186 42.358041 4.90625 42.90625 4.90625 z M 38.6875 7.1875 L 42.8125 11.3125 L 40.0625 14.03125 L 35.96875 9.9375 L 38.6875 7.1875 z M 34.53125 11.34375 L 38.65625 15.46875 L 12.75 41.34375 L 12 40.5625 L 12 39 A 1.0001 1.0001 0 0 0 11 38 L 9.4375 38 L 8.65625 37.25 L 34.53125 11.34375 z M 7.65625 39.09375 L 8.28125 39.71875 A 1.0001 1.0001 0 0 0 9 40 L 10 40 L 10 41 A 1.0001 1.0001 0 0 0 10.28125 41.71875 L 10.90625 42.34375 L 7.09375 43.78125 L 6.21875 42.90625 L 7.65625 39.09375 z" />
                    </svg>
                </button>

                <button id="pipet">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                        <path d="M 42.46875 1 C 40.796859 1.0001147 39.14502 1.6368187 37.875 2.90625 L 31.3125 9.4375 L 31.15625 9.28125 C 30.725334 8.8503342 30.165845 8.65625 29.59375 8.65625 C 29.021655 8.65625 28.430916 8.8503342 28 9.28125 L 25.40625 11.90625 C 24.544418 12.768082 24.544418 14.200668 25.40625 15.0625 L 26.4375 16.0625 L 8.375 34.125 C 7.0337163 35.466284 6.2532865 36.462816 5.78125 37.3125 C 5.3092135 38.162184 5.1710014 38.89493 5.0625 39.4375 C 4.9539986 39.98007 4.8729835 40.353512 4.53125 40.96875 C 4.1895165 41.583988 3.5439682 42.424539 2.28125 43.6875 A 1.0001 1.0001 0 0 0 2.28125 45.09375 L 4.90625 47.71875 A 1.0001 1.0001 0 0 0 6.3125 47.71875 C 7.5752163 46.456034 8.4161375 45.810485 9.03125 45.46875 C 9.6463625 45.127015 10.019909 45.046068 10.5625 44.9375 C 11.105091 44.828932 11.837729 44.690917 12.6875 44.21875 C 13.537271 43.746583 14.533474 42.966526 15.875 41.625 L 33.9375 23.5625 L 34.9375 24.59375 C 35.799332 25.455582 37.231918 25.455582 38.09375 24.59375 L 40.71875 22 C 41.58009 21.13866 41.578894 19.70569 40.71875 18.84375 L 40.5625 18.6875 L 47.09375 12.125 C 49.632988 9.5857624 49.632722 5.446399 47.09375 2.90625 C 45.824121 1.6360323 44.140641 0.99988534 42.46875 1 z M 42.5 2.96875 C 43.657725 2.9686966 44.800129 3.4247177 45.6875 4.3125 C 47.462528 6.088351 47.462262 8.9439876 45.6875 10.71875 L 39.125 17.25 L 32.75 10.875 L 39.28125 4.3125 C 40.16923 3.4249313 41.342275 2.9688034 42.5 2.96875 z M 29.59375 10.65625 C 29.655645 10.65625 29.701916 10.670665 29.75 10.71875 L 39.28125 20.25 C 39.37911 20.34806 39.37791 20.49709 39.28125 20.59375 L 36.6875 23.1875 C 36.59133 23.28367 36.471168 23.28367 36.375 23.1875 L 34.8125 21.65625 A 1.0054782 1.0054782 0 0 0 34.46875 21.3125 L 28.78125 15.59375 A 1.0001 1.0001 0 0 0 28.34375 15.15625 L 26.8125 13.625 C 26.71633 13.52883 26.71633 13.408668 26.8125 13.3125 L 29.40625 10.71875 C 29.454335 10.670665 29.531855 10.65625 29.59375 10.65625 z M 27.84375 17.5 L 32.5 22.15625 L 14.4375 40.21875 C 13.174526 41.481724 12.334011 42.126886 11.71875 42.46875 C 11.103489 42.810614 10.730034 42.860193 10.1875 42.96875 C 9.6449665 43.077307 8.9121687 43.246704 8.0625 43.71875 C 7.4219226 44.074632 6.5772001 44.845135 5.6875 45.65625 L 4.34375 44.3125 C 5.1548604 43.422631 5.92539 42.578171 6.28125 41.9375 C 6.7532665 41.087707 6.9227514 40.355055 7.03125 39.8125 C 7.1397486 39.269945 7.1895365 38.896347 7.53125 38.28125 C 7.8729635 37.666153 8.5185337 36.825216 9.78125 35.5625 L 27.84375 17.5 z"/>
                    </svg>
                </button>
            </div>

            <table id="editor" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);"></table>
        </div>

        <div id="buttons">
            <button id="random">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                    <path d="M 36.71875 5.28125 L 35.28125 6.71875 L 38.5625 10 L 32.5625 10 C 30.6235 10 28.84725 11.14725 28.03125 12.90625 L 24.3125 20.84375 L 25.4375 23.21875 L 29.84375 13.75 C 30.33175 12.695 31.3995 12 32.5625 12 L 38.5625 12 L 35.28125 15.28125 L 36.71875 16.71875 L 41.71875 11.71875 L 42.40625 11 L 41.71875 10.28125 L 36.71875 5.28125 z M 8 10 L 8 12 L 14.4375 12 C 15.607859 12 16.663126 12.688581 17.15625 13.75 L 28.03125 37.09375 C 28.850006 38.85732 30.618859 40 32.5625 40 L 38.5625 40 L 35.28125 43.28125 L 36.71875 44.71875 L 41.71875 39.71875 L 42.40625 39 L 41.71875 38.28125 L 36.71875 33.28125 L 35.28125 34.71875 L 38.5625 38 L 32.5625 38 C 31.392141 38 30.336994 37.31243 29.84375 36.25 L 18.96875 12.90625 C 18.149874 11.143669 16.381141 10 14.4375 10 L 8 10 z M 21.5625 26.78125 L 17.15625 36.25 C 16.66725 37.304 15.6005 38 14.4375 38 L 8 38 L 8 40 L 14.4375 40 C 16.3765 40 18.15275 38.85275 18.96875 37.09375 L 22.6875 29.15625 L 21.5625 26.78125 z" overflow="visible" />
                </svg>
                Random
            </button>
            <button id="clear">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" enable-background="new 0 0 50 50">
                    <path d="M 7.8125 8 A 1.0001 1.0001 0 0 0 7 9 L 7 13 A 1.0001 1.0001 0 0 0 8 14 L 8.1875 14 L 11.125 29.75 A 1.0001 1.0001 0 0 0 11.25 30.34375 L 12.59375 37.53125 A 1.0001 1.0001 0 0 0 12.6875 38 L 13.40625 41.875 A 1.0001 1.0001 0 0 0 13.40625 41.90625 C 13.896596 44.235393 15.921272 46 18.3125 46 L 31.6875 46 C 34.068877 46 36.202105 44.259821 36.59375 41.875 C 36.59535 41.8651 36.59215 41.85364 36.59375 41.84375 L 37.3125 38 A 1.0001 1.0001 0 0 0 37.3125 37.96875 L 37.34375 37.90625 A 1.0001 1.0001 0 0 0 37.40625 37.5 L 38.75 30.375 A 1.0001 1.0001 0 0 0 38.875 29.71875 L 41.8125 14 L 42 14 A 1.0001 1.0001 0 0 0 43 13 L 43 9 A 1.0001 1.0001 0 0 0 42 8 L 8 8 A 1.0001 1.0001 0 0 0 7.90625 8 A 1.0001 1.0001 0 0 0 7.8125 8 z M 9 10 L 41 10 L 41 12 L 32.21875 12 A 1.0001 1.0001 0 0 0 31.90625 11.96875 A 1.0001 1.0001 0 0 0 31.8125 12 L 21.21875 12 A 1.0001 1.0001 0 0 0 20.90625 11.96875 A 1.0001 1.0001 0 0 0 20.8125 12 L 9 12 L 9 10 z M 12.4375 14 L 15.5625 14 L 14 15.5625 L 12.4375 14 z M 18.4375 14 L 20.5625 14 L 23.5625 17 L 19.5 21.09375 L 15.4375 17 L 18.4375 14 z M 23.4375 14 L 26.5625 14 L 25 15.5625 L 23.4375 14 z M 29.4375 14 L 31.5625 14 L 34.5625 17 L 30.5 21.0625 L 26.4375 17 L 29.4375 14 z M 34.4375 14 L 37.5625 14 L 36 15.5625 L 34.4375 14 z M 10.34375 14.78125 L 12.5625 17 L 11.0625 18.53125 L 10.34375 14.78125 z M 39.65625 14.78125 L 38.96875 18.53125 L 37.4375 17 L 39.65625 14.78125 z M 14 18.4375 L 18.09375 22.5 L 14 26.59375 L 12.40625 25 A 1.0001 1.0001 0 0 0 12.25 24.875 L 11.5 20.90625 L 14 18.4375 z M 25 18.4375 L 29.09375 22.5 L 25 26.59375 L 20.90625 22.5 L 25 18.4375 z M 36 18.4375 L 38.5 20.90625 L 37.78125 24.84375 A 1.0001 1.0001 0 0 0 37.59375 25 L 36 26.59375 L 31.90625 22.5 L 36 18.4375 z M 19.5 23.90625 L 23.59375 28 L 19.5 32.09375 L 15.40625 28 L 19.5 23.90625 z M 30.5 23.90625 L 34.59375 28 L 30.5 32.09375 L 26.40625 28 L 30.5 23.90625 z M 14 29.40625 L 18.09375 33.5 L 14.53125 37.0625 L 13.25 30.15625 L 14 29.40625 z M 25 29.40625 L 29.09375 33.5 L 25 37.59375 L 20.90625 33.5 L 25 29.40625 z M 36 29.40625 L 36.78125 30.1875 L 35.46875 37.0625 L 31.90625 33.5 L 36 29.40625 z M 19.5 34.90625 L 23.59375 39 L 20 42.59375 L 15.90625 38.5 L 19.5 34.90625 z M 30.5 34.90625 L 34.09375 38.5 L 30 42.59375 L 26.40625 39 L 30.5 34.90625 z M 25 40.40625 L 28.59375 44 L 21.40625 44 L 25 40.40625 z M 15.21875 40.625 L 18.59375 44 L 18.3125 44 C 16.903728 44 15.684654 42.970857 15.375 41.5 L 15.21875 40.625 z M 34.78125 40.625 L 34.625 41.5 A 1.0001 1.0001 0 0 0 34.625 41.53125 C 34.403965 42.931139 33.096272 44 31.6875 44 L 31.40625 44 L 34.78125 40.625 z"/>
                </svg>
                Clear
            </button>
            <button id="save">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                    <path d="M 15 7 C 13.940754 7 13.042969 7.9533333 13.042969 9 L 13.042969 20.908203 L 10 25.708984 L 10 41 C 10 42.093084 10.908145 43 12 43 L 15 43 L 38 43 C 39.091879 43 40 42.091879 40 41 L 40 9 C 40 7.9081212 39.091879 7 38 7 L 15 7 z M 15.042969 9 L 38 9 L 38 41 L 15 41 L 12 41 L 12 26.291016 L 15.042969 21.488281 L 15.042969 9 z M 18 11 L 18 18 L 20 18 L 20 11 L 18 11 z M 23 11 L 23 18 L 25 18 L 25 11 L 23 11 z M 28 11 L 28 18 L 30 18 L 30 11 L 28 11 z M 33 11 L 33 18 L 35 18 L 35 11 L 33 11 z" />
                </svg>
                Save
            </button>
        </div>

        <div id="form">
            <input name="name" type="text" maxlength="8">
            <button>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" enable-background="new 0 0 50 50">
                    <path d="M 42.875 8.625 A 1.0001 1.0001 0 0 0 42.78125 8.65625 A 1.0001 1.0001 0 0 0 42.15625 9.125 L 21.71875 40.8125 L 7.65625 28.125 A 1.0001 1.0001 0 1 0 6.34375 29.59375 L 21.25 43.09375 A 1.0001 1.0001 0 0 0 22.75 42.875 L 43.84375 10.1875 A 1.0001 1.0001 0 0 0 42.875 8.625 z" />
                </svg>
            </button>
        </div>

        <script>
            var currentColor = 'ffffff';
            
            var socket = null;
            

            jQuery(document).ready(function($){
                $('#picker').iris({
                    width: 400,
                    hide: false,
                    border: false,
                    width: $('#picker').width(),

                    palettes: ['#000', '#f00', '#ff0', '#0f0', '#00f', '#fff'],

                    change: function(event, ui) {
                        $("#color").css('backgroundColor', ui.color.toString());
                        $("#color").css('color', ui.color.toString());

                        var color = ui.color.toString().substring(1);

                        if (color != currentColor) {
                            currentColor = color;
                        }
                    }
                });

                $("#picker").on({
                    touchstart: touchHandler,
                    touchmove: touchHandler,
                    touchend: touchHandler,
                    touchcancel: touchHandler
                });

                function touchHandler(event) {
                    if ( !$(event.target).hasClass('ui-draggable') &&
                         !$(event.target).hasClass('ui-slider') &&
                         !$(event.target).hasClass('ui-slider-handle') &&
                         !$(event.target).hasClass('iris-square-inner') &&
                         !$(event.target).hasClass('iris-palette') ) {
                        return;
                    }

                    var touches = event.originalEvent.changedTouches,
                        first = touches[0],
                        type = "";

                    switch(event.type) {
                        case "touchstart": type = "mousedown"; break;
                        case "touchmove":  type="mousemove"; break;
                        case "touchend":   type="mouseup"; break;
                        default: return;
                    }

                    var simulatedEvent = document.createEvent("MouseEvent");
                    simulatedEvent.initMouseEvent(type, true, true, window, 1,
                                            first.screenX, first.screenY,
                                            first.clientX, first.clientY, false,
                                            false, false, false, 0/*left*/, null);

                    first.target.dispatchEvent(simulatedEvent);

                    if (type == "mouseup") {
                        var simulatedEvent = document.createEvent("MouseEvent");
                        simulatedEvent.initMouseEvent("click", true, true, window, 1,
                                                first.screenX, first.screenY,
                                                first.clientX, first.clientY, false,
                                                false, false, false, 0/*left*/, null);

                        first.target.dispatchEvent(simulatedEvent);
                    }
                    event.preventDefault();
                }


                $("#pencil").on("touchstart click", function(e) {
                    e.preventDefault();
                    $(document.body).addClass("pencil");
                    $(document.body).removeClass("pipet");
                });

                $("#pipet").on("touchstart click", function(e) {
                    e.preventDefault();
                    $(document.body).addClass("pipet");
                    $(document.body).removeClass("pencil");
                });


                $("#color").on("touchstart click", function(e) {
                    e.preventDefault();
                    $(document.body).toggleClass("picker");
                });

                $("#buttons #random").on("touchstart click", function(e) {
                    e.preventDefault();

                    if ($(document.body).hasClass("form")) {
                      $(document.body).removeClass("form");
                      return;
                    }

                    $.ajax({
                        url: "/api?command=random",
                    }).done(function(bitmap) {
                        setBitmap(bitmap);
                    }) ;
                });

                $("#buttons #clear").on("touchstart click", function(e) {
                    e.preventDefault();

                    if ($(document.body).hasClass("form")) {
                      $(document.body).removeClass("form");
                      return;
                    }

                    $('#editor td').each(function(cell) {
                        $(this).attr('data-color', '000000');
                        $(this).css({'backgroundColor': '#000000' });
                    });

                    if (socket) {
                        socket.send(JSON.stringify({ command: "draw", color: "000000" }));
                    } else {
                      $.ajax({
                          url: "/api?command=draw&color=000000",
                      });
                    }
                });

                $("#buttons #save").on("touchstart click", function(e) {
                    e.preventDefault();

                    if ($(document.body).hasClass("form")) {
                      $(document.body).removeClass("form");
                      return;
                    }

                    $(document.body).addClass("form");
                });

                $("#form button").on("touchstart click", function(e) {
                    e.preventDefault();

                    $(document.body).removeClass("form");

                    if ($("[name=name]").val()) {
                        var icon = $("[name=name]").val().toLowerCase();

                        $.ajax({
                            url: "/api?command=save&icon=" + icon + "&bitmap=" + getBitmap(),
                            complete: function() {
                                alert('Saved!');
                                $("[name=name]").val("");
                            }
                        });
                    }
                })


                buildTable();
                updateTable();

                $.ajax({
                    url: "/api?command=get",
                }).done(function(bitmap) {
                    setBitmap(bitmap);
                });

                socket = new WebSocket("ws://" + window.location.host + "/ws");
                socket.onmessage = function(msg) {
                	var data = null;
                	
                	if (msg.data) {
                	  try {
                	    data = JSON.parse(msg.data);
                	  } catch(e) {
                	  }
                	}
                	
                	if (data) {
                	  if (data.command == "draw" && data.color !== undefined && data.x !== undefined && data.y !== undefined) {
                	    var el = $('td[data-x=' + data.x + '][data-y=' + data.y + ']');
                      el.attr('data-color', data.color);
                      el.css({'backgroundColor': '#' + data.color });
                	  }
                
                	  else if (data.command == "draw" && data.color !== undefined) {
                      $('#editor td').each(function() {
                        $(this).attr('data-color', data.color);
                        $(this).css({'backgroundColor': '#' + data.color });
                      });
                	  }
                	}
                }
            });



            function buildTable() {
                var content = '';
                for (var y = 0; y < 8; y++) {
                    content += "<tr>";

                    for (var x = 0; x < 8; x++) {
                        content += "<td data-x='" + x + "' data-y='" + y + "' data-color='000000'></td>";
                    }

                    content += "</tr>";
                }

                $('#editor').html(content);

                $("#editor").on("mousedown mouseenter", 'td', function(e) {
                    if (e.which) {
                        drawPixel($(this));
                    }

                    e.preventDefault();
                });

                $("#editor").on("touchstart touchmove", function(e) {
                    for (var i = 0; i < e.originalEvent.changedTouches.length; i++) {
                      var pageX = e.originalEvent.changedTouches[i].pageX;
                      var pageY = e.originalEvent.changedTouches[i].pageY;
                      
                      var el = document.elementFromPoint(pageX, pageY);
                      if (el.tagName && el.tagName == 'TD' && $(el).parent("#editor")) {
                          drawPixel($(el));
                      }
                    }

                    e.preventDefault();
                })
            }

            function drawPixel(el) {
                if ($(document.body).hasClass("pipet")) {
                    currentColor = el.attr('data-color');
                    $("#color").css('backgroundColor', "#" + currentColor);
                    $('#picker').iris('color', "#" + currentColor);
                    
                    $(document.body).addClass("pencil");
                    $(document.body).removeClass("pipet")
                    return;
                }

                if (el.attr('data-color') != currentColor) {
                    el.attr('data-color', currentColor);
                    el.css({'backgroundColor': '#' + currentColor });

                    if (socket) {
                        socket.send(JSON.stringify({ command: "draw", x: $(el).attr('data-x'), y: $(el).attr('data-y'), color: currentColor }));
                    } else {
                      $.ajax({
                          url: "/api?command=draw&x=" + $(el).attr('data-x') + "&y=" + $(el).attr('data-y') + "&color=" + currentColor,
                      });
                    }
                }
            }

            function updateTable() {
                $('#editor td').each(function(cell) {
                    $(this).css({'backgroundColor': '#' + $(this).attr('data-color')});
                });
            }

            function getBitmap() {
                var bitmap = '';

                $('#editor td').each(function(cell) {
                    bitmap += $(this).attr('data-color');
                });

                return bitmap;
            }

            function setBitmap(bitmap) {
                $('#editor td').each(function(cell) {
                    var pos = (parseInt($(this).attr('data-y'), 10) * 8) + parseInt($(this).attr('data-x'), 10);
                    var c = bitmap.substring(pos * 6, (pos * 6) + 6);

                    $(this).attr('data-color', c);
                    $(this).css({'backgroundColor': '#' + c});
                });
            }

            function dropHandler(ev) {
                ev.preventDefault();

                var dt = ev.dataTransfer;
                if (dt.items) {
                    for (var i=0; i < dt.items.length; i++) {
                        if (dt.items[i].kind == "file") {
                            handleFile(dt.items[i].getAsFile());
                        }
                    }
                } else {
                    for (var i=0; i < dt.files.length; i++) {
                        handleFile(dt.files[i]);
                    }
                }
            }

            function dragOverHandler(ev) {
                ev.preventDefault();
            }

            function handleFile(f) {
                if (f.type == 'image/png' || f.type == 'image/jpg' || f.type == 'image/gif') {
                    var c = document.createElement('canvas');
                    c.height = 8;
                    c.width = 8;

                    var ctx = c.getContext('2d');

                    var img = new Image;
                    img.onload = function() {
                        ctx.drawImage(img, 0, 0, 8, 8);

                        for (var x = 0; x < 8; x++) {
                            for (var y = 0; y < 8; y++) {
                                var p = ctx.getImageData(x, y, 1, 1).data;
                                var c = ("000000" + rgbToHex(p[0], p[1], p[2])).slice(-6)
                                var td = $('td[data-x=' + x + '][data-y=' + y + ']');
                                td.attr('data-color', c);
                                td.css({'backgroundColor': '#' + c });
                            }
                        }

                        $.ajax({
                            url: "/api?command=draw&bitmap=" + getBitmap(),
                        });
                    }

                    img.src = URL.createObjectURL(f);
                }
            }

            function rgbToHex(r, g, b) {
                if (r > 255 || g > 255 || b > 255)
                    throw "Invalid color component";
                return ((r << 16) | (g << 8) | b).toString(16);
            }

        </script>
    </body>
</html>